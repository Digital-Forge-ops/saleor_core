name: uv.lock check

on:
  pull_request:
    paths:
      - '**/pyproject.toml'
      - 'uv.lock'

jobs:
  uv-lock-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build helper image with uv
        run: |
          cat > docker-uv-helper.Dockerfile <<'DOCKERFILE'
          FROM python:3.12
          COPY --from=ghcr.io/astral-sh/uv:0.8 /uv /uvx /bin/
          WORKDIR /app
          ENTRYPOINT ["/bin/sh","-c"]
          DOCKERFILE
          docker build -f docker-uv-helper.Dockerfile -t uv-helper:0.8 .

      - name: Run uv lock --check and show diff on failure
        run: |
          set -euo pipefail
          echo "Running uv lock --check"
          if docker run --rm -v "$GITHUB_WORKSPACE:/app" -w /app uv-helper:0.8 /bin/uv lock --check; then
            echo "uv.lock is up to date"
            exit 0
          else
            echo "uv.lock is out of date â€” generating a new lock to show diff"
            # generate a fresh lockfile for diffing
            docker run --rm -v "$GITHUB_WORKSPACE:/app" -w /app uv-helper:0.8 /bin/uv lock > uv.lock.new || true
            echo "--- DIFF: uv.lock (repo) vs uv.lock.new (generated) ---"
            if command -v diff >/dev/null 2>&1; then
              diff -u uv.lock uv.lock.new || true
            else
              # fallback to showing head of generated lock
              head -n 200 uv.lock.new || true
            fi
            echo "\nERROR: uv.lock is not in sync with pyproject.toml. Run 'uv lock' and include the updated uv.lock in your PR."
            exit 1
          fi
